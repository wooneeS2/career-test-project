{"ast":null,"code":"var _jsxFileName = \"/Users/kimwonhee/Desktop/GitHub/career-test-project/career-psycololgy-test/src/pages/SampleQuestionPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { QuestionList, MainQuestion } from \"../style_components/CustomQuestions\";\nimport { Grid, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport NextBtn from \"../style_components/CustomButtons\";\nimport ProgressBar from \"../style_components/CustomProgressBar\";\nimport MainTitle from \"../style_components/CustomTitles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SampleQuestionPage() {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n  const [sampleQuestion, setSampleQuestion] = useState({\n    question: \"\",\n    answer01: \"\",\n    answer02: \"\",\n    answer03: \"\",\n    answer04: \"\",\n    answerScore01: \"\",\n    answerScore02: \"\"\n  });\n\n  const handleIsActive = e => {\n    console.log(e.target.value);\n    e.target.value !== null ? setIsActive(true) : setIsActive(false);\n    console.log(isActive);\n  };\n\n  useEffect(() => {\n    console.log(\"effect isActive\", isActive);\n  }, [isActive]);\n  const url = \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=2cfc3ece4e557d4a41050b92786fdd44&q=6\";\n\n  const connectSampleQuestion = async () => {\n    const response = await axios.get(url);\n    const setRes = response.data.RESULT[0];\n    setSampleQuestion(current => {\n      const newQue = { ...current\n      };\n      newQue.question = setRes.question;\n      newQue.answer01 = setRes.answer01;\n      newQue.answer02 = setRes.answer02;\n      newQue.answer03 = setRes.answer03;\n      newQue.answer04 = setRes.answer04;\n      newQue.answerScore01 = setRes.answerScore01;\n      newQue.answerScore02 = setRes.answerScore02;\n      return newQue;\n    });\n  };\n\n  useEffect(() => {\n    connectSampleQuestion();\n    console.log(\"local\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    display: \"inline\",\n    children: [/*#__PURE__*/_jsxDEV(MainTitle, {\n      title: \"검사 예시\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        value: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingBottom: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainQuestion, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n      questions: {\n        question: sampleQuestion.question,\n        answer01: sampleQuestion.answer01,\n        answer02: sampleQuestion.answer02,\n        answer03: sampleQuestion.answer03,\n        answer04: sampleQuestion.answer04,\n        answerScore01: sampleQuestion.answerScore01,\n        answerScore02: sampleQuestion.answerScore02\n      },\n      handleRadioBtn: handleIsActive,\n      index: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(NextBtn, {\n        toPath: isActive ? \"/test-progress\" : \"#\",\n        title: \"시작하기\",\n        isActive: isActive ? false : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SampleQuestionPage, \"xiNW16V0499vAZ+/MWvteK5XxN0=\");\n\n_c = SampleQuestionPage;\nexport default SampleQuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleQuestionPage\");","map":{"version":3,"sources":["/Users/kimwonhee/Desktop/GitHub/career-test-project/career-psycololgy-test/src/pages/SampleQuestionPage.js"],"names":["React","useState","useEffect","QuestionList","MainQuestion","Grid","Box","axios","NextBtn","ProgressBar","MainTitle","SampleQuestionPage","isActive","setIsActive","sampleQuestion","setSampleQuestion","question","answer01","answer02","answer03","answer04","answerScore01","answerScore02","handleIsActive","e","console","log","target","value","url","connectSampleQuestion","response","get","setRes","data","RESULT","current","newQue","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  QuestionList,\n  MainQuestion,\n} from \"../style_components/CustomQuestions\";\nimport { Grid, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport NextBtn from \"../style_components/CustomButtons\";\nimport ProgressBar from \"../style_components/CustomProgressBar\";\nimport MainTitle from \"../style_components/CustomTitles\";\n\nexport function SampleQuestionPage() {\n  const [isActive, setIsActive] = useState(false);\n  const [sampleQuestion, setSampleQuestion] = useState({\n    question: \"\",\n    answer01: \"\",\n    answer02: \"\",\n    answer03: \"\",\n    answer04: \"\",\n    answerScore01: \"\",\n    answerScore02: \"\",\n  });\n\n  const handleIsActive = e => {\n    console.log(e.target.value);\n    e.target.value !== null ? setIsActive(true) : setIsActive(false);\n    console.log(isActive);\n  };\n\n  useEffect(() => {\n    console.log(\"effect isActive\", isActive);\n  }, [isActive]);\n\n  const url =\n    \"http://www.career.go.kr/inspct/openapi/test/questions?apikey=2cfc3ece4e557d4a41050b92786fdd44&q=6\";\n\n  const connectSampleQuestion = async () => {\n    const response = await axios.get(url);\n    const setRes = response.data.RESULT[0];\n    setSampleQuestion(current => {\n      const newQue = { ...current };\n      newQue.question = setRes.question;\n      newQue.answer01 = setRes.answer01;\n      newQue.answer02 = setRes.answer02;\n      newQue.answer03 = setRes.answer03;\n      newQue.answer04 = setRes.answer04;\n      newQue.answerScore01 = setRes.answerScore01;\n      newQue.answerScore02 = setRes.answerScore02;\n      return newQue;\n    });\n  };\n\n  useEffect(() => {\n    connectSampleQuestion();\n    console.log(\"local\");\n  }, []);\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n      display=\"inline\"\n    >\n      <MainTitle title={\"검사 예시\"} />\n      <Box sx={{ paddingBottom: \"20px\" }}>\n        <ProgressBar value={0} />\n      </Box>\n\n      <Box sx={{ paddingBottom: \"10px\" }}>\n        <MainQuestion />\n      </Box>\n      <QuestionList\n        questions={{\n          question: sampleQuestion.question,\n          answer01: sampleQuestion.answer01,\n          answer02: sampleQuestion.answer02,\n          answer03: sampleQuestion.answer03,\n          answer04: sampleQuestion.answer04,\n          answerScore01: sampleQuestion.answerScore01,\n          answerScore02: sampleQuestion.answerScore02,\n        }}\n        handleRadioBtn={handleIsActive}\n        index={1}\n      ></QuestionList>\n      <Grid item>\n        <NextBtn\n          toPath={isActive ? \"/test-progress\" : \"#\"}\n          title={\"시작하기\"}\n          isActive={isActive ? false : true}\n        />\n      </Grid>\n    </Grid>\n  );\n}\nexport default SampleQuestionPage;\n"]},"metadata":{},"sourceType":"module"}